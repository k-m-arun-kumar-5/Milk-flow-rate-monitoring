C51 COMPILER V9.60.0.0   BARGRAPH                                                          09/24/2022 11:29:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BARGRAPH
OBJECT MODULE PLACED IN .\Objects\bargraph.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE bargraph.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -bargraph.lst) TABS(2) OBJECT(.\Objects\bargraph.obj)

line level    source

   1          /* ********************************************************************
   2          FILE                 : bargraph.c
   3          
   4          PURPOSE              :  Simple bargraph library. 
   5                                 Prepare for the bargraph display. update the bargraph and display the bargraph pins
             -.                   
   6             
   7          AUTHOR               : K.M. Arun Kumar alias Arunkumar Murugeswaran
   8             
   9          KNOWN BUGS           : 
  10          
  11          NOTE                 :  used linear scale on bargraph. 
  12          
  13          CHANGE LOGS          :
  14          
  15          *****************************************************************************/  
  16          #include "main.h"
  17          #include "port.h"
  18          
  19          #include "bargraph.h"
  20          
  21          // ------ Public variable declarations -----------------------------
  22          
  23          /* Data_G  var has total pulse count over period of every ( MAX_UPDATECALL * SYSTEM_TICK_INTERVAL) time,
  24             to be used for bargraph display */
  25          tBargraph Data_G;
  26          
  27          // ------ Private constants ----------------------------------------
  28          
  29          #define BARGRAPH_ON (1)
  30          #define BARGRAPH_OFF (0)
  31          
  32          /* max pulse count that can have on a every ( MAX_UPDATECALL * SYSTEM_TICK_INTERVAL) period time.
  33          MAX_UPDATECALL = 450 and SYSTEM_TICK_INTERVAL = 30 */
  34          /* we want MAX_PULSE_CNT as 9, because it has 9 possible states, for 8 pin output port in uC, we can easil
             -y adopt it */
  35          #define MAX_PULSE_CNT (9)
  36          
  37          
  38          // ------ Private variables ----------------------------------------
  39          
  40          /* use linear bargraph for 9 possible state. These variables used to store the thresholds for bargraph  */
  41          static tBargraph Threshold_1_G;
  42          static tBargraph Threshold_2_G;
  43          static tBargraph Threshold_3_G;
  44          static tBargraph Threshold_4_G;
  45          static tBargraph Threshold_5_G;
  46          static tBargraph Threshold_6_G;
  47          static tBargraph Threshold_7_G;
  48          static tBargraph Threshold_8_G;
  49          
  50          /*------------------------------------------------------------*-
  51          FUNCTION NAME  : BARGRAPH_Init
  52          
C51 COMPILER V9.60.0.0   BARGRAPH                                                          09/24/2022 11:29:18 PAGE 2   

  53          DESCRIPTION    : Prepare for the bargraph display. Initialize bargraph pins as OFF 
  54                           and configure threshold values of each of the Threshold_* variables
  55          
  56          INPUT          : none
  57          
  58          OUTPUT         : initialize bargraph pins as OFF.
  59          
  60          NOTE           : 
  61          -*------------------------------------------------------------*/
  62          void BARGRAPH_Init(void)
  63             {
  64   1         Pin0 = BARGRAPH_OFF;   
  65   1         Pin1 = BARGRAPH_OFF;   
  66   1         Pin2 = BARGRAPH_OFF;   
  67   1         Pin3 = BARGRAPH_OFF;   
  68   1         Pin4 = BARGRAPH_OFF;   
  69   1         Pin5 = BARGRAPH_OFF;   
  70   1         Pin6 = BARGRAPH_OFF;   
  71   1         Pin7 = BARGRAPH_OFF;   
  72   1      
  73   1         /*  Use a linear scale to display data possible output states .Bargraph has *9* possible output states.
  74   1             In our case, (0 - 8) possible output states. */
  75   1        /* fixed Range = (BARGRAPH_MAX - BARGRAPH_MIN) */ 
  76   1         /* if BARGRAPH_MAX = 29, BARGRAPH_MIN = 2, and MAX_PULSE_CNT = 9,then Threshold_1_G = 3, Threshold_2_G 
             -= 6, 
  77   1             Threshold_3_G = 9, so on, to form a linear scale  */ 
  78   1        /*    Do all calculations of threshold values ONCE */
  79   1         Threshold_1_G = (BARGRAPH_MAX - BARGRAPH_MIN) / MAX_PULSE_CNT;
  80   1         Threshold_2_G = Threshold_1_G * 2;
  81   1         Threshold_3_G = Threshold_1_G * 3;
  82   1         Threshold_4_G = Threshold_1_G * 4;
  83   1         Threshold_5_G = Threshold_1_G * 5;
  84   1         Threshold_6_G = Threshold_1_G * 6;
  85   1         Threshold_7_G = Threshold_1_G * 7;
  86   1         Threshold_8_G = Threshold_1_G * 8;
  87   1         }
  88          /*------------------------------------------------------------*-
  89          FUNCTION NAME  : BARGRAPH_Update
  90          
  91          DESCRIPTION    :  Update the bargraph and display the bargraph pins
  92             
  93          INPUT          : total number of pulse count for  period of every ( MAX_UPDATECALL * SYSTEM_TICK_INTERVAL)
             - time
  94          
  95          OUTPUT         : update bargraph display pins.
  96          
  97          NOTE           : this func is called for period of every ( MAX_UPDATECALL * SYSTEM_TICK_INTERVAL) time.
  98          -*------------------------------------------------------------*/
  99          void BARGRAPH_Update(void)
 100             {
 101   1          /* if Data_G = 9 and BARGRAPH_MIN = 2, then Data = 7 */ 
 102   1          tBargraph Data = Data_G - BARGRAPH_MIN; 
 103   1        /* bargraph has *9* possible output states */
 104   1        /* eg pin0 = 1, when data = 7, for Threshold_1_G = 3 */  
 105   1         Pin0 = ((Data >= Threshold_1_G) == BARGRAPH_ON);
 106   1        /* eg pin1 = 1, when data = 7, for Threshold_2_G = 6 */    
 107   1         Pin1 = ((Data >= Threshold_2_G) == BARGRAPH_ON);
 108   1        /* eg pin2 = 0, when data = 7, for Threshold_3_G = 9 , so on .. */  
 109   1        /* eg. in our case exact data lies between Threshold_2_G and Threshold_3_G */    
 110   1         Pin2 = ((Data >= Threshold_3_G) == BARGRAPH_ON);
 111   1         Pin3 = ((Data >= Threshold_4_G) == BARGRAPH_ON);
 112   1         Pin4 = ((Data >= Threshold_5_G) == BARGRAPH_ON);
C51 COMPILER V9.60.0.0   BARGRAPH                                                          09/24/2022 11:29:18 PAGE 3   

 113   1         Pin5 = ((Data >= Threshold_6_G) == BARGRAPH_ON);
 114   1         Pin6 = ((Data >= Threshold_7_G) == BARGRAPH_ON);
 115   1         Pin7 = ((Data >= Threshold_8_G) == BARGRAPH_ON);
 116   1         }
 117          
 118          /*------------------------------------------------------------------*-
 119            ---- END OF FILE -------------------------------------------------
 120          -*------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
